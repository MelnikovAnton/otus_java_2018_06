Для создания утечки я заполняю List 10 kB значениями. Вторым потоком я заполняю List null чтобы работал GC.

Для сохранения результата я пытаюсь обрабатывать OutOfMemoryError. Для того чтобы приложение осталось "живим" я сразу удаляю 32 мБ массив и List, после чего сохраняю статистику в файл «GC-Statistics.log»


Для получения информации о работе GC используется com.sun.manageme.GarbageCollectionNotificationInfo.
С помощью ключа:
-Xlog:gc:./logs/gc_pid_%p.log
Я сохраняю лог работы GC в директорию ./logs

Для управления утечкой памяти можно использовать MBeans.

Для Запуска можно использовать скрипт start.sh или start.cmd (в зависимости от ОС).
Скрипт собирает приложение и последовательно запускает приложение с ключами:
-XX:+UseParallelGC -XX:-UseParallelOldGC
-XX:+UseSerialGC
-XX:+UseParallelGC
-XX:+UseConcMarkSweepGC
-XX:+UseG1GC

В моем случае скрипт выполнялся 27 мин. Лучший результат показал G1. Раньше всех «упал» ParallelGC.